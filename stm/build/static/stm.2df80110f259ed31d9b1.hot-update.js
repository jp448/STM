webpackHotUpdate("stm",{

/***/ "./packages/mars-theme/src/components/list/table.js":
/*!**********************************************************!*\
  !*** ./packages/mars-theme/src/components/list/table.js ***!
  \**********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @emotion/styled-base */ \"./node_modules/@emotion/styled-base/dist/styled-base.browser.esm.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var frontity__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! frontity */ \"./node_modules/frontity/dist/src/index.js\");\n/* harmony import */ var frontity__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(frontity__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _link__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../link */ \"./packages/mars-theme/src/components/link.js\");\n/* harmony import */ var _tablesorter__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./tablesorter */ \"./packages/mars-theme/src/components/list/tablesorter.js\");\n/* harmony import */ var _img_chevron_down_svg__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./../../img/chevron_down.svg */ \"./packages/mars-theme/src/img/chevron_down.svg\");\n/* harmony import */ var _img_chevron_down_svg__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_img_chevron_down_svg__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var _img_chevron_up_svg__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./../../img/chevron_up.svg */ \"./packages/mars-theme/src/img/chevron_up.svg\");\n/* harmony import */ var _img_chevron_up_svg__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(_img_chevron_up_svg__WEBPACK_IMPORTED_MODULE_6__);\n/* harmony import */ var _emotion_core__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @emotion/core */ \"./node_modules/@emotion/core/dist/core.browser.esm.js\");\nfunction _EMOTION_STRINGIFIED_CSS_ERROR__(){return\"You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop).\";}/**\n * Table Component\n *\n * It renders the table. The table contains\n * - Table headers: the info given for each project (year built etc), are clickable to sort data\n * - Table body: is filled with table rows\n * - Table rows: each row is a project, is clickable and then the images are shown\n */var Table=(_ref)=>{var{state,items}=_ref;var data=state.source.get(state.router.link);var[selectedHeader,setSelectedHeader]=Object(react__WEBPACK_IMPORTED_MODULE_1__[\"useState\"])('');var[rowClicked,setRowClicked]=Object(react__WEBPACK_IMPORTED_MODULE_1__[\"useState\"])(-1);var tableheaders=[];state.theme.menu.forEach(element=>{if(element.link===data.link){tableheaders=element.tableheaders;}});var[sortingState,setSortingState]=Object(react__WEBPACK_IMPORTED_MODULE_1__[\"useState\"])(new Array(tableheaders.length).fill(false));var tableitems=[];// create an item array\n// lets get the item info out of the ids\ndata.items.forEach(function(_ref2){var{type,id}=_ref2;tableitems.push(state.source[type][id]);});var clickHeader=header=>{setSelectedHeader(header);var idx=tableheaders.indexOf(header);var copyState=[...sortingState];copyState[idx]=!copyState[idx];setSortingState(copyState);setRowClicked(-1);};var clickRow=idx=>{if(idx===rowClicked){idx=-1;}setRowClicked(idx);};var headerdata=[];tableheaders.forEach(element=>{if(selectedHeader===element){var idx=tableheaders.indexOf(selectedHeader);var chevron=sortingState[idx]?_img_chevron_up_svg__WEBPACK_IMPORTED_MODULE_6___default.a:_img_chevron_down_svg__WEBPACK_IMPORTED_MODULE_5___default.a;headerdata.push(Object(_emotion_core__WEBPACK_IMPORTED_MODULE_7__[\"jsx\"])(TableHeader,{onClick:()=>clickHeader(element)},element,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_7__[\"jsx\"])(Chevron,{src:chevron,key:idx})));}else{headerdata.push(Object(_emotion_core__WEBPACK_IMPORTED_MODULE_7__[\"jsx\"])(TableHeader,{onClick:()=>clickHeader(element),key:element},element));}});if(selectedHeader.length!==0){var idx=tableheaders.indexOf(selectedHeader);tableitems=Object(_tablesorter__WEBPACK_IMPORTED_MODULE_4__[\"sortItems\"])(tableitems,selectedHeader,sortingState[idx]);}var getTableElement=(content,hasImages)=>{return hasImages?Object(_emotion_core__WEBPACK_IMPORTED_MODULE_7__[\"jsx\"])(TableDataWithHover,null,content):Object(_emotion_core__WEBPACK_IMPORTED_MODULE_7__[\"jsx\"])(TableData,null,content);};var tabledata=[];{tableitems.map((item,idx)=>{var hasImage={};var hasHover=false;if(idx===rowClicked&&item.acf.gallery.length>0){hasImage={fontWeight:\"bold\",color:\"#050401\"};hasHover=true;}else if(item.acf.gallery.length>0){hasHover=true;}tabledata.push(Object(_emotion_core__WEBPACK_IMPORTED_MODULE_7__[\"jsx\"])(TableRow,{style:hasImage,key:idx,onClick:()=>clickRow(idx)},getTableElement(item.title.rendered,hasHover),getTableElement(item.acf.year,hasHover),getTableElement(item.acf.location,hasHover),getTableElement(item.acf.program,hasHover),getTableElement(item.acf.description,hasHover),getTableElement(item.acf.competition,hasHover),getTableElement(item.acf.built?\"x\":\"\",hasHover)));if(idx===rowClicked&&item.acf.gallery.length>0){var images=[];item.acf.gallery.forEach(image=>{images.push(Object(_emotion_core__WEBPACK_IMPORTED_MODULE_7__[\"jsx\"])(_link__WEBPACK_IMPORTED_MODULE_3__[\"default\"],{link:item.link},Object(_emotion_core__WEBPACK_IMPORTED_MODULE_7__[\"jsx\"])(ProjectImage,{src:image.sizes.thumbnail,alt:image.description,key:image.id})));});tabledata.push(Object(_emotion_core__WEBPACK_IMPORTED_MODULE_7__[\"jsx\"])(TableRow,null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_7__[\"jsx\"])(TableData,{colSpan:\"7\"},images)));}});}return Object(_emotion_core__WEBPACK_IMPORTED_MODULE_7__[\"jsx\"])(Container,null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_7__[\"jsx\"])(TableElement,null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_7__[\"jsx\"])(TableHead,null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_7__[\"jsx\"])(TableRow,null,headerdata)),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_7__[\"jsx\"])(TableBody,null,tabledata)));};/* harmony default export */ __webpack_exports__[\"default\"] = (Object(frontity__WEBPACK_IMPORTED_MODULE_2__[\"connect\"])(Table));var Container=Object(_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\"div\",{target:\"eooash30\",label:\"Container\"})( false?undefined:{name:\"pb02ub\",styles:\"margin-top:80px;width:100%;\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__});var TableElement=Object(_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\"table\",{target:\"eooash31\",label:\"TableElement\"})( false?undefined:{name:\"acr0eh\",styles:\"border-collapse:collapse;width:100%;@media (min-width:100px) and (max-width:576px){td:not(:nth-of-type(1)){display:none;}th:not(:nth-of-type(1)){display:none;}}\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__});var TableHead=Object(_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\"thead\",{target:\"eooash32\",label:\"TableHead\"})( false?undefined:{name:\"u7uymp\",styles:\"border-bottom:3px solid #050401;& > tr:hover{border:none;cursor:pointer;}\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__});var TableRow=Object(_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\"tr\",{target:\"eooash33\",label:\"TableRow\"})( false?undefined:{name:\"xoctxc\",styles:\"color:grey;border-bottom:1px solid transparent;border-top:1px solid transparent;\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__});var TableHeader=Object(_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\"th\",{target:\"eooash34\",label:\"TableHeader\"})( false?undefined:{name:\"wxy43t\",styles:\"text-align:left;color:#050401;padding-top:15px;padding-bottom:15px;padding-left:15px;padding-right:15px;text-align:left;width:104px;\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__});var TableBody=Object(_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\"tbody\",{target:\"eooash35\",label:\"TableBody\"})( false?undefined:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\");var TableData=Object(_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\"td\",{target:\"eooash36\",label:\"TableData\"})( false?undefined:{name:\"8wwyie\",styles:\"text-align:center;vertical-align:middle;font-family:'Cutive Mono',monospace;padding-top:15px;padding-bottom:15px;padding-left:15px;padding-right:15px;text-align:left;\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__});var TableDataWithHover=/*#__PURE__*/Object(_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(TableData,{target:\"eooash37\",label:\"TableDataWithHover\"})(\"cursor:pointer;\",TableRow,\":hover &{color:#050401;font-weight:bold;}@media (min-width:100px) and (max-width:576px){font-weight:bold;}\"+( false?undefined:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\"));var Chevron=Object(_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\"img\",{target:\"eooash38\",label:\"Chevron\"})( false?undefined:{name:\"z8l1kg\",styles:\"width:14px;display:inline;padding-left:10px;\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__});var ProjectImage=Object(_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\"img\",{target:\"eooash39\",label:\"ProjectImage\"})( false?undefined:{name:\"1g360fb\",styles:\"padding:5px;\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./packages/mars-theme/src/components/list/table.js\n");

/***/ })

})